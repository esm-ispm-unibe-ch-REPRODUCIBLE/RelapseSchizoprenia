library(metafor)
library(meta)
library(xlsx)
library(readxl)
library(netmeta)
library(tidyverse)
#library(swirl)
library(WriteXLS)
rm(list = ls())
data= read_excel("C:/Users/kc19o338/Desktop/Analysis schizofrenia/dataset_relapse_2019_06_25.xlsx", na="99999")
#### Oral and depot applications should be used as separate interventions. Therefore we need to add the type of medication application to drug_name
data$Drug_name<-paste(data$Drug_name,data$Medicationapplication)
#### We extracted the number of relapses from study start up to 3 months (=< 12 wks), from more than 3 months (>12 wks) up to 6 months (=<26 wks), from more than 6 months (>26 wks) up to 9 month (=< 39 wks), from more than 9 months (>39 wks) up to 12 months (<52 wks) and for more than 12 wks (>52 wks).We also enter data of the latest time point in each study in the outcome "N_Relapse_AnyTime".
#### As described in my specific questions, we may pool some of these intervals. One possibility is to use relapses from more than 6 months up to 12 month (>26 wks and =< 52 wks)
#### Therefore we need to use 9 month relapse data when 12 month data is not available
data<-mutate(data, Relapse_N_12m=ifelse(is.na(Relapse_N_12m), Relapse_N_9m, Relapse_N_12m))
dataset_dichotomous1<-
data%>%
mutate(
IndivArm_n=data$N_arm_total_stapf,
IndivArm_events=data$Relapse_N_AnyTime
)
dataset_dichotomous2<-
select(dataset_dichotomous1, Final_ID_all, Study_name, Drug_name, IndivArm_n, IndivArm_events)%>%
drop_na%>%
group_by(Final_ID_all, Study_name, Drug_name)%>%
summarise(
pooled_n=sum(IndivArm_n, na.rm = FALSE),
pooled_events=sum(IndivArm_events, na.rm = FALSE)
)
View(dataset_dichotomous2)
View(dataset_dichotomous2)
dataset_dichotomous3=data.frame(
Final_ID_all=dataset_dichotomous2$Final_ID_all,
Study_name=dataset_dichotomous2$Study_name,
Drug_name=dataset_dichotomous2$Drug_name,
pooled_n=dataset_dichotomous2$pooled_n,
pooled_events=dataset_dichotomous2$pooled_events,
stringsAsFactors = FALSE)
TestPair <- pairwise(treat=Drug_name, event=pooled_events, n=pooled_n, data=dataset_dichotomous3, sm="OR", studlab=Final_ID_all, allstudies = TRUE)
TestPair=TestPair[TestPair$studlab!=4376,]
net1 <- netmeta(TE, seTE, treat1, treat2, studlab, data = TestPair, sm = "OR", comb.random=TRUE, comb.fixed=FALSE, prediction=TRUE)
summary(net1, digits = 2)
print(net1, digits = 2)
decomp.design(net1)
netgraph(net1)
forest(net1,ref="Placebo oral")
library(NMAJags)
library(R2jags)
library(devtools)
data= read_excel("C:/Users/kc19o338/Desktop/Analysis schizofrenia/dataset_relapse_2019_06_25.xlsx", na="99999")
#### Oral and depot applications should be used as separate interventions. Therefore we need to add the type of medication application to drug_name
data$Drug_name<-paste(data$Drug_name,data$Medicationapplication)
#### We extracted the number of relapses from study start up to 3 months (=< 12 wks), from more than 3 months (>12 wks) up to 6 months (=<26 wks), from more than 6 months (>26 wks) up to 9 month (=< 39 wks), from more than 9 months (>39 wks) up to 12 months (<52 wks) and for more than 12 wks (>52 wks).We also enter data of the latest time point in each study in the outcome "N_Relapse_AnyTime".
#### As described in my specific questions, we may pool some of these intervals. One possibility is to use relapses from more than 6 months up to 12 month (>26 wks and =< 52 wks)
#### Therefore we need to use 9 month relapse data when 12 month data is not available
data<-mutate(data, Relapse_N_12m=ifelse(is.na(Relapse_N_12m), Relapse_N_9m, Relapse_N_12m))
dataset_dichotomous1<-
data%>%
mutate(
IndivArm_n=data$N_arm_total_stapf,
IndivArm_events=data$Relapse_N_12m
)
dataset_dichotomous2<-
select(dataset_dichotomous1, Final_ID_all, Study_name, Drug_name, IndivArm_n, IndivArm_events)%>%
drop_na%>%
group_by(Final_ID_all, Study_name, Drug_name)%>%
summarise(
pooled_n=sum(IndivArm_n, na.rm = FALSE),
pooled_events=sum(IndivArm_events, na.rm = FALSE)
)
View(dataset_dichotomous2)
View(dataset_dichotomous2)
dataset_dichotomous3=data.frame(
Final_ID_all=dataset_dichotomous2$Final_ID_all,
Study_name=dataset_dichotomous2$Study_name,
Drug_name=dataset_dichotomous2$Drug_name,
pooled_n=dataset_dichotomous2$pooled_n,
pooled_events=dataset_dichotomous2$pooled_events,
stringsAsFactors = FALSE)
NMAdatabinary=make.jagsNMA.data(studyid=Study_name,t=Drug_name,r=pooled_events,n=pooled_n,data=dataset_dichotomous3,type="binary",reference = "Placebo oral")
NMAinJAGS<- jags.parallel(data = NMAdatabinary, inits = NULL,
parameters.to.save = c("OR","ORref","tau", "d", "LORref"), n.chains = 2, n.iter = 10000,
n.burnin = 1000,DIC=F,n.thin=10,
model.file = modelNMABinary2)
#### function similar to modelNMABinary that also returns LORref ######
modelNMABinary2=function ()
{
for (i in 1:ns) {
w[i, 1] <- 0
theta[i, t[i, 1]] <- 0
for (k in 1:na[i]) {
r[i, t[i, k]] ~ dbin(p[i, t[i, k]], n[i, t[i, k]])
}
logit(p[i, t[i, 1]]) <- u[i]
for (k in 2:na[i]) {
logit(p[i, t[i, k]]) <- u[i] + theta[i, t[i, k]]
theta[i, t[i, k]] ~ dnorm(md[i, t[i, k]], precd[i,
t[i, k]])
md[i, t[i, k]] <- mean[i, k] + sw[i, k]
w[i, k] <- (theta[i, t[i, k]] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
precd[i, t[i, k]] <- prec * 2 * (k - 1)/k
mean[i, k] <- d[t[i, k]] - d[t[i, 1]]
}
}
for (i in 1:ns) {
u[i] ~ dnorm(0, 0.01)
}
tau ~ dnorm(0, 1) %_% T(0, )
prec <- 1/pow(tau, 2)
tau.sq <- pow(tau, 2)
d[ref] <- 0
for (k in 1:(ref - 1)) {
d[k] ~ dnorm(0, 0.01)
}
for (k in (ref + 1):nt) {
d[k] ~ dnorm(0, 0.01)
}
for (i in 1:(nt - 1)) {
for (j in (i + 1):nt) {
OR[j, i] <- exp(d[j] - d[i])
LOR[j, i] <- d[j] - d[i]
}
}
for (j in 1:(ref - 1)) {
ORref[j] <- exp(d[j] - d[ref])
LORref[j]<-d[j]-d[ref]
}
for (j in (ref + 1):nt) {
ORref[j] <- exp(d[j] - d[ref])
LORref[j]<-d[j]-d[ref]
}
}
NMAinJAGS<- jags.parallel(data = NMAdatabinary, inits = NULL,
parameters.to.save = c("OR","ORref","tau", "d", "LORref"), n.chains = 2, n.iter = 10000,
n.burnin = 1000,DIC=F,n.thin=10,
model.file = modelNMABinary2)
print(NMAinJAGS)
traceplot(NMAinJAGS,varname="tau" )
traceplot(NMAinJAGS,varname='LORref' )
#forestplot against placebo
LORref <- as.vector(NMAinJAGS$BUGSoutput$mean$LORref)
seLORref <- as.vector(NMAinJAGS$BUGSoutput$sd$LORref)
m1 <- metagen(LORref,seLORref,sm='OR')
forest(m1,overall = F)
View(data)
View(data)
